name: "VGG_data-PED_SSD_230x230_test"
layer {
  name: "data"
  type: "VideoData"
  top: "data"
  transform_param {
    mean_value: 104
    mean_value: 117
    mean_value: 123
    resize_param {
      prob: 1
      resize_mode: WARP
      height: 230
      width: 230
      interp_mode: LINEAR
    }
  }
  data_param {
    batch_size: 1
  }
  video_data_param {
    video_type: WEBCAM
    device_id: 0
    sampling_rate: 1
  }
}

#---------------------------------Inceptionv2 Body----------------------------#
layer {
  name: "conv_conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv_conv1"
  convolution_param { 
     num_output: 96
     kernel_size: 7
     stride: 2
     pad: 3
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_conv1"
  type: "BatchNorm"
  bottom: "conv_conv1"
  top: "conv_conv1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_conv1"
  bottom: "conv_conv1"
  top: "conv_conv1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_conv1"
  type: "ReLU"
  bottom: "conv_conv1"
  top: "conv_conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv_conv1"
  top: "pool1"
  pooling_param {
     pool: MAX
     kernel_size: 3
     stride: 2
     pad: 0
  }
}

layer {
  name: "conv_conv2red"
  type: "Convolution"
  bottom: "pool1"
  top: "conv_conv2red"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_conv2red"
  type: "BatchNorm"
  bottom: "conv_conv2red"
  top: "conv_conv2red"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_conv2red"
  bottom: "conv_conv2red"
  top: "conv_conv2red"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_conv2red"
  type: "ReLU"
  bottom: "conv_conv2red"
  top: "conv_conv2red"
}

layer {
  name: "conv_conv2"
  type: "Convolution"
  bottom: "conv_conv2red"
  top: "conv_conv2"
  convolution_param { 
     num_output: 288
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_conv2"
  type: "BatchNorm"
  bottom: "conv_conv2"
  top: "conv_conv2"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_conv2"
  bottom: "conv_conv2"
  top: "conv_conv2"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_conv2"
  type: "ReLU"
  bottom: "conv_conv2"
  top: "conv_conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv_conv2"
  top: "pool2"
  pooling_param {
     pool: MAX
     kernel_size: 3
     stride: 2
     pad: 0
  }
}

layer {
  name: "conv_3a_1x1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv_3a_1x1"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_1x1"
  type: "BatchNorm"
  bottom: "conv_3a_1x1"
  top: "conv_3a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_1x1"
  bottom: "conv_3a_1x1"
  top: "conv_3a_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_1x1"
  type: "ReLU"
  bottom: "conv_3a_1x1"
  top: "conv_3a_1x1"
}

layer {
  name: "conv_3a_3x3_reduce"
  type: "Convolution"
  bottom: "pool2"
  top: "conv_3a_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3a_3x3_reduce"
  top: "conv_3a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_3x3_reduce"
  bottom: "conv_3a_3x3_reduce"
  top: "conv_3a_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3a_3x3_reduce"
  top: "conv_3a_3x3_reduce"
}

layer {
  name: "conv_3a_3x3"
  type: "Convolution"
  bottom: "conv_3a_3x3_reduce"
  top: "conv_3a_3x3"
  convolution_param { 
     num_output: 96
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_3x3"
  type: "BatchNorm"
  bottom: "conv_3a_3x3"
  top: "conv_3a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_3x3"
  bottom: "conv_3a_3x3"
  top: "conv_3a_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_3x3"
  type: "ReLU"
  bottom: "conv_3a_3x3"
  top: "conv_3a_3x3"
}

layer {
  name: "conv_3a_double_3x3_reduce"
  type: "Convolution"
  bottom: "pool2"
  top: "conv_3a_double_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3a_double_3x3_reduce"
  top: "conv_3a_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_double_3x3_reduce"
  bottom: "conv_3a_double_3x3_reduce"
  top: "conv_3a_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3a_double_3x3_reduce"
  top: "conv_3a_double_3x3_reduce"
}

layer {
  name: "conv_3a_double_3x3_0"
  type: "Convolution"
  bottom: "conv_3a_double_3x3_reduce"
  top: "conv_3a_double_3x3_0"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_3a_double_3x3_0"
  top: "conv_3a_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_double_3x3_0"
  bottom: "conv_3a_double_3x3_0"
  top: "conv_3a_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_double_3x3_0"
  type: "ReLU"
  bottom: "conv_3a_double_3x3_0"
  top: "conv_3a_double_3x3_0"
}

layer {
  name: "conv_3a_double_3x3_1"
  type: "Convolution"
  bottom: "conv_3a_double_3x3_0"
  top: "conv_3a_double_3x3_1"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_3a_double_3x3_1"
  top: "conv_3a_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_double_3x3_1"
  bottom: "conv_3a_double_3x3_1"
  top: "conv_3a_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_double_3x3_1"
  type: "ReLU"
  bottom: "conv_3a_double_3x3_1"
  top: "conv_3a_double_3x3_1"
}

layer {
  name: "ave_pool_3a_pool"
  type: "Pooling"
  bottom: "pool2"
  top: "ave_pool_3a_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_3a_proj"
  type: "Convolution"
  bottom: "ave_pool_3a_pool"
  top: "conv_3a_proj"
  convolution_param { 
     num_output: 48
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3a_proj"
  type: "BatchNorm"
  bottom: "conv_3a_proj"
  top: "conv_3a_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3a_proj"
  bottom: "conv_3a_proj"
  top: "conv_3a_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3a_proj"
  type: "ReLU"
  bottom: "conv_3a_proj"
  top: "conv_3a_proj"
}

layer {
  name: "ch_concat_3a_chconcat"
  type: "Concat"
  bottom: "conv_3a_1x1"
  bottom: "conv_3a_3x3"
  bottom: "conv_3a_double_3x3_1"
  bottom: "conv_3a_proj"
  top: "ch_concat_3a_chconcat"
}

layer {
  name: "conv_3b_1x1"
  type: "Convolution"
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_1x1"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_1x1"
  type: "BatchNorm"
  bottom: "conv_3b_1x1"
  top: "conv_3b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_1x1"
  bottom: "conv_3b_1x1"
  top: "conv_3b_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_1x1"
  type: "ReLU"
  bottom: "conv_3b_1x1"
  top: "conv_3b_1x1"
}

layer {
  name: "conv_3b_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3b_3x3_reduce"
  top: "conv_3b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_3x3_reduce"
  bottom: "conv_3b_3x3_reduce"
  top: "conv_3b_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3b_3x3_reduce"
  top: "conv_3b_3x3_reduce"
}

layer {
  name: "conv_3b_3x3"
  type: "Convolution"
  bottom: "conv_3b_3x3_reduce"
  top: "conv_3b_3x3"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_3x3"
  type: "BatchNorm"
  bottom: "conv_3b_3x3"
  top: "conv_3b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_3x3"
  bottom: "conv_3b_3x3"
  top: "conv_3b_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_3x3"
  type: "ReLU"
  bottom: "conv_3b_3x3"
  top: "conv_3b_3x3"
}

layer {
  name: "conv_3b_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_double_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3b_double_3x3_reduce"
  top: "conv_3b_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_double_3x3_reduce"
  bottom: "conv_3b_double_3x3_reduce"
  top: "conv_3b_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3b_double_3x3_reduce"
  top: "conv_3b_double_3x3_reduce"
}

layer {
  name: "conv_3b_double_3x3_0"
  type: "Convolution"
  bottom: "conv_3b_double_3x3_reduce"
  top: "conv_3b_double_3x3_0"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_3b_double_3x3_0"
  top: "conv_3b_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_double_3x3_0"
  bottom: "conv_3b_double_3x3_0"
  top: "conv_3b_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_double_3x3_0"
  type: "ReLU"
  bottom: "conv_3b_double_3x3_0"
  top: "conv_3b_double_3x3_0"
}

layer {
  name: "conv_3b_double_3x3_1"
  type: "Convolution"
  bottom: "conv_3b_double_3x3_0"
  top: "conv_3b_double_3x3_1"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_3b_double_3x3_1"
  top: "conv_3b_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_double_3x3_1"
  bottom: "conv_3b_double_3x3_1"
  top: "conv_3b_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_double_3x3_1"
  type: "ReLU"
  bottom: "conv_3b_double_3x3_1"
  top: "conv_3b_double_3x3_1"
}

layer {
  name: "ave_pool_3b_pool"
  type: "Pooling"
  bottom: "ch_concat_3a_chconcat"
  top: "ave_pool_3b_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_3b_proj"
  type: "Convolution"
  bottom: "ave_pool_3b_pool"
  top: "conv_3b_proj"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3b_proj"
  type: "BatchNorm"
  bottom: "conv_3b_proj"
  top: "conv_3b_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3b_proj"
  bottom: "conv_3b_proj"
  top: "conv_3b_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3b_proj"
  type: "ReLU"
  bottom: "conv_3b_proj"
  top: "conv_3b_proj"
}

layer {
  name: "ch_concat_3b_chconcat"
  type: "Concat"
  bottom: "conv_3b_1x1"
  bottom: "conv_3b_3x3"
  bottom: "conv_3b_double_3x3_1"
  bottom: "conv_3b_proj"
  top: "ch_concat_3b_chconcat"
}

layer {
  name: "conv_3c_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3b_chconcat"
  top: "conv_3c_3x3_reduce"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3c_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3c_3x3_reduce"
  top: "conv_3c_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3c_3x3_reduce"
  bottom: "conv_3c_3x3_reduce"
  top: "conv_3c_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3c_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3c_3x3_reduce"
  top: "conv_3c_3x3_reduce"
}

layer {
  name: "conv_3c_3x3"
  type: "Convolution"
  bottom: "conv_3c_3x3_reduce"
  top: "conv_3c_3x3"
  convolution_param { 
     num_output: 240
     kernel_size: 3
     stride: 2
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3c_3x3"
  type: "BatchNorm"
  bottom: "conv_3c_3x3"
  top: "conv_3c_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3c_3x3"
  bottom: "conv_3c_3x3"
  top: "conv_3c_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3c_3x3"
  type: "ReLU"
  bottom: "conv_3c_3x3"
  top: "conv_3c_3x3"
}

layer {
  name: "conv_3c_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3b_chconcat"
  top: "conv_3c_double_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3c_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_3c_double_3x3_reduce"
  top: "conv_3c_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3c_double_3x3_reduce"
  bottom: "conv_3c_double_3x3_reduce"
  top: "conv_3c_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3c_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_3c_double_3x3_reduce"
  top: "conv_3c_double_3x3_reduce"
}

layer {
  name: "conv_3c_double_3x3_0"
  type: "Convolution"
  bottom: "conv_3c_double_3x3_reduce"
  top: "conv_3c_double_3x3_0"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3c_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_3c_double_3x3_0"
  top: "conv_3c_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3c_double_3x3_0"
  bottom: "conv_3c_double_3x3_0"
  top: "conv_3c_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3c_double_3x3_0"
  type: "ReLU"
  bottom: "conv_3c_double_3x3_0"
  top: "conv_3c_double_3x3_0"
}

layer {
  name: "conv_3c_double_3x3_1"
  type: "Convolution"
  bottom: "conv_3c_double_3x3_0"
  top: "conv_3c_double_3x3_1"
  convolution_param { 
     num_output: 144
     kernel_size: 3
     stride: 2
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_3c_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_3c_double_3x3_1"
  top: "conv_3c_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_3c_double_3x3_1"
  bottom: "conv_3c_double_3x3_1"
  top: "conv_3c_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_3c_double_3x3_1"
  type: "ReLU"
  bottom: "conv_3c_double_3x3_1"
  top: "conv_3c_double_3x3_1"
}

layer {
  name: "max_pool_3c_pool"
  type: "Pooling"
  bottom: "ch_concat_3b_chconcat"
  top: "max_pool_3c_pool"
  pooling_param {
     pool: MAX
     kernel_size: 3
     stride: 2
     pad: 0
  }
}

layer {
  name: "ch_concat_3c_chconcat"
  type: "Concat"
  bottom: "conv_3c_3x3"
  bottom: "conv_3c_double_3x3_1"
  bottom: "max_pool_3c_pool"
  top: "ch_concat_3c_chconcat"
}

layer {
  name: "conv_4a_1x1"
  type: "Convolution"
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_1x1"
  convolution_param { 
     num_output: 224
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_1x1"
  type: "BatchNorm"
  bottom: "conv_4a_1x1"
  top: "conv_4a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_1x1"
  bottom: "conv_4a_1x1"
  top: "conv_4a_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_1x1"
  type: "ReLU"
  bottom: "conv_4a_1x1"
  top: "conv_4a_1x1"
}

layer {
  name: "conv_4a_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_3x3_reduce"
  convolution_param { 
     num_output: 64
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4a_3x3_reduce"
  top: "conv_4a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_3x3_reduce"
  bottom: "conv_4a_3x3_reduce"
  top: "conv_4a_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4a_3x3_reduce"
  top: "conv_4a_3x3_reduce"
}

layer {
  name: "conv_4a_3x3"
  type: "Convolution"
  bottom: "conv_4a_3x3_reduce"
  top: "conv_4a_3x3"
  convolution_param { 
     num_output: 96
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_3x3"
  type: "BatchNorm"
  bottom: "conv_4a_3x3"
  top: "conv_4a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_3x3"
  bottom: "conv_4a_3x3"
  top: "conv_4a_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_3x3"
  type: "ReLU"
  bottom: "conv_4a_3x3"
  top: "conv_4a_3x3"
}

layer {
  name: "conv_4a_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_double_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4a_double_3x3_reduce"
  top: "conv_4a_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_double_3x3_reduce"
  bottom: "conv_4a_double_3x3_reduce"
  top: "conv_4a_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4a_double_3x3_reduce"
  top: "conv_4a_double_3x3_reduce"
}

layer {
  name: "conv_4a_double_3x3_0"
  type: "Convolution"
  bottom: "conv_4a_double_3x3_reduce"
  top: "conv_4a_double_3x3_0"
  convolution_param { 
     num_output: 128
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_4a_double_3x3_0"
  top: "conv_4a_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_double_3x3_0"
  bottom: "conv_4a_double_3x3_0"
  top: "conv_4a_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_double_3x3_0"
  type: "ReLU"
  bottom: "conv_4a_double_3x3_0"
  top: "conv_4a_double_3x3_0"
}

layer {
  name: "conv_4a_double_3x3_1"
  type: "Convolution"
  bottom: "conv_4a_double_3x3_0"
  top: "conv_4a_double_3x3_1"
  convolution_param { 
     num_output: 128
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_4a_double_3x3_1"
  top: "conv_4a_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_double_3x3_1"
  bottom: "conv_4a_double_3x3_1"
  top: "conv_4a_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_double_3x3_1"
  type: "ReLU"
  bottom: "conv_4a_double_3x3_1"
  top: "conv_4a_double_3x3_1"
}

layer {
  name: "ave_pool_4a_pool"
  type: "Pooling"
  bottom: "ch_concat_3c_chconcat"
  top: "ave_pool_4a_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_4a_proj"
  type: "Convolution"
  bottom: "ave_pool_4a_pool"
  top: "conv_4a_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4a_proj"
  type: "BatchNorm"
  bottom: "conv_4a_proj"
  top: "conv_4a_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4a_proj"
  bottom: "conv_4a_proj"
  top: "conv_4a_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4a_proj"
  type: "ReLU"
  bottom: "conv_4a_proj"
  top: "conv_4a_proj"
}

layer {
  name: "ch_concat_4a_chconcat"
  type: "Concat"
  bottom: "conv_4a_1x1"
  bottom: "conv_4a_3x3"
  bottom: "conv_4a_double_3x3_1"
  bottom: "conv_4a_proj"
  top: "ch_concat_4a_chconcat"
}

layer {
  name: "conv_4b_1x1"
  type: "Convolution"
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_1x1"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_1x1"
  type: "BatchNorm"
  bottom: "conv_4b_1x1"
  top: "conv_4b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_1x1"
  bottom: "conv_4b_1x1"
  top: "conv_4b_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_1x1"
  type: "ReLU"
  bottom: "conv_4b_1x1"
  top: "conv_4b_1x1"
}

layer {
  name: "conv_4b_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4b_3x3_reduce"
  top: "conv_4b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_3x3_reduce"
  bottom: "conv_4b_3x3_reduce"
  top: "conv_4b_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4b_3x3_reduce"
  top: "conv_4b_3x3_reduce"
}

layer {
  name: "conv_4b_3x3"
  type: "Convolution"
  bottom: "conv_4b_3x3_reduce"
  top: "conv_4b_3x3"
  convolution_param { 
     num_output: 128
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_3x3"
  type: "BatchNorm"
  bottom: "conv_4b_3x3"
  top: "conv_4b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_3x3"
  bottom: "conv_4b_3x3"
  top: "conv_4b_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_3x3"
  type: "ReLU"
  bottom: "conv_4b_3x3"
  top: "conv_4b_3x3"
}

layer {
  name: "conv_4b_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_double_3x3_reduce"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4b_double_3x3_reduce"
  top: "conv_4b_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_double_3x3_reduce"
  bottom: "conv_4b_double_3x3_reduce"
  top: "conv_4b_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4b_double_3x3_reduce"
  top: "conv_4b_double_3x3_reduce"
}

layer {
  name: "conv_4b_double_3x3_0"
  type: "Convolution"
  bottom: "conv_4b_double_3x3_reduce"
  top: "conv_4b_double_3x3_0"
  convolution_param { 
     num_output: 128
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_4b_double_3x3_0"
  top: "conv_4b_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_double_3x3_0"
  bottom: "conv_4b_double_3x3_0"
  top: "conv_4b_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_double_3x3_0"
  type: "ReLU"
  bottom: "conv_4b_double_3x3_0"
  top: "conv_4b_double_3x3_0"
}

layer {
  name: "conv_4b_double_3x3_1"
  type: "Convolution"
  bottom: "conv_4b_double_3x3_0"
  top: "conv_4b_double_3x3_1"
  convolution_param { 
     num_output: 128
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_4b_double_3x3_1"
  top: "conv_4b_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_double_3x3_1"
  bottom: "conv_4b_double_3x3_1"
  top: "conv_4b_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_double_3x3_1"
  type: "ReLU"
  bottom: "conv_4b_double_3x3_1"
  top: "conv_4b_double_3x3_1"
}

layer {
  name: "ave_pool_4b_pool"
  type: "Pooling"
  bottom: "ch_concat_4a_chconcat"
  top: "ave_pool_4b_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_4b_proj"
  type: "Convolution"
  bottom: "ave_pool_4b_pool"
  top: "conv_4b_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4b_proj"
  type: "BatchNorm"
  bottom: "conv_4b_proj"
  top: "conv_4b_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4b_proj"
  bottom: "conv_4b_proj"
  top: "conv_4b_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4b_proj"
  type: "ReLU"
  bottom: "conv_4b_proj"
  top: "conv_4b_proj"
}

layer {
  name: "ch_concat_4b_chconcat"
  type: "Concat"
  bottom: "conv_4b_1x1"
  bottom: "conv_4b_3x3"
  bottom: "conv_4b_double_3x3_1"
  bottom: "conv_4b_proj"
  top: "ch_concat_4b_chconcat"
}

layer {
  name: "conv_4c_1x1"
  type: "Convolution"
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_1x1"
  convolution_param { 
     num_output: 160
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_1x1"
  type: "BatchNorm"
  bottom: "conv_4c_1x1"
  top: "conv_4c_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_1x1"
  bottom: "conv_4c_1x1"
  top: "conv_4c_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_1x1"
  type: "ReLU"
  bottom: "conv_4c_1x1"
  top: "conv_4c_1x1"
}

layer {
  name: "conv_4c_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_3x3_reduce"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4c_3x3_reduce"
  top: "conv_4c_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_3x3_reduce"
  bottom: "conv_4c_3x3_reduce"
  top: "conv_4c_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4c_3x3_reduce"
  top: "conv_4c_3x3_reduce"
}

layer {
  name: "conv_4c_3x3"
  type: "Convolution"
  bottom: "conv_4c_3x3_reduce"
  top: "conv_4c_3x3"
  convolution_param { 
     num_output: 160
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_3x3"
  type: "BatchNorm"
  bottom: "conv_4c_3x3"
  top: "conv_4c_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_3x3"
  bottom: "conv_4c_3x3"
  top: "conv_4c_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_3x3"
  type: "ReLU"
  bottom: "conv_4c_3x3"
  top: "conv_4c_3x3"
}

layer {
  name: "conv_4c_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_double_3x3_reduce"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4c_double_3x3_reduce"
  top: "conv_4c_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_double_3x3_reduce"
  bottom: "conv_4c_double_3x3_reduce"
  top: "conv_4c_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4c_double_3x3_reduce"
  top: "conv_4c_double_3x3_reduce"
}

layer {
  name: "conv_4c_double_3x3_0"
  type: "Convolution"
  bottom: "conv_4c_double_3x3_reduce"
  top: "conv_4c_double_3x3_0"
  convolution_param { 
     num_output: 160
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_4c_double_3x3_0"
  top: "conv_4c_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_double_3x3_0"
  bottom: "conv_4c_double_3x3_0"
  top: "conv_4c_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_double_3x3_0"
  type: "ReLU"
  bottom: "conv_4c_double_3x3_0"
  top: "conv_4c_double_3x3_0"
}

layer {
  name: "conv_4c_double_3x3_1"
  type: "Convolution"
  bottom: "conv_4c_double_3x3_0"
  top: "conv_4c_double_3x3_1"
  convolution_param { 
     num_output: 160
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_4c_double_3x3_1"
  top: "conv_4c_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_double_3x3_1"
  bottom: "conv_4c_double_3x3_1"
  top: "conv_4c_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_double_3x3_1"
  type: "ReLU"
  bottom: "conv_4c_double_3x3_1"
  top: "conv_4c_double_3x3_1"
}

layer {
  name: "ave_pool_4c_pool"
  type: "Pooling"
  bottom: "ch_concat_4b_chconcat"
  top: "ave_pool_4c_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_4c_proj"
  type: "Convolution"
  bottom: "ave_pool_4c_pool"
  top: "conv_4c_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4c_proj"
  type: "BatchNorm"
  bottom: "conv_4c_proj"
  top: "conv_4c_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4c_proj"
  bottom: "conv_4c_proj"
  top: "conv_4c_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4c_proj"
  type: "ReLU"
  bottom: "conv_4c_proj"
  top: "conv_4c_proj"
}

layer {
  name: "ch_concat_4c_chconcat"
  type: "Concat"
  bottom: "conv_4c_1x1"
  bottom: "conv_4c_3x3"
  bottom: "conv_4c_double_3x3_1"
  bottom: "conv_4c_proj"
  top: "ch_concat_4c_chconcat"
}

layer {
  name: "conv_4d_1x1"
  type: "Convolution"
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_1x1"
  convolution_param { 
     num_output: 96
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_1x1"
  type: "BatchNorm"
  bottom: "conv_4d_1x1"
  top: "conv_4d_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_1x1"
  bottom: "conv_4d_1x1"
  top: "conv_4d_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_1x1"
  type: "ReLU"
  bottom: "conv_4d_1x1"
  top: "conv_4d_1x1"
}

layer {
  name: "conv_4d_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_3x3_reduce"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4d_3x3_reduce"
  top: "conv_4d_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_3x3_reduce"
  bottom: "conv_4d_3x3_reduce"
  top: "conv_4d_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4d_3x3_reduce"
  top: "conv_4d_3x3_reduce"
}

layer {
  name: "conv_4d_3x3"
  type: "Convolution"
  bottom: "conv_4d_3x3_reduce"
  top: "conv_4d_3x3"
  convolution_param { 
     num_output: 192
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_3x3"
  type: "BatchNorm"
  bottom: "conv_4d_3x3"
  top: "conv_4d_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_3x3"
  bottom: "conv_4d_3x3"
  top: "conv_4d_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_3x3"
  type: "ReLU"
  bottom: "conv_4d_3x3"
  top: "conv_4d_3x3"
}

layer {
  name: "conv_4d_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_double_3x3_reduce"
  convolution_param { 
     num_output: 160
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4d_double_3x3_reduce"
  top: "conv_4d_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_double_3x3_reduce"
  bottom: "conv_4d_double_3x3_reduce"
  top: "conv_4d_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4d_double_3x3_reduce"
  top: "conv_4d_double_3x3_reduce"
}

layer {
  name: "conv_4d_double_3x3_0"
  type: "Convolution"
  bottom: "conv_4d_double_3x3_reduce"
  top: "conv_4d_double_3x3_0"
  convolution_param { 
     num_output: 96
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_4d_double_3x3_0"
  top: "conv_4d_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_double_3x3_0"
  bottom: "conv_4d_double_3x3_0"
  top: "conv_4d_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_double_3x3_0"
  type: "ReLU"
  bottom: "conv_4d_double_3x3_0"
  top: "conv_4d_double_3x3_0"
}

layer {
  name: "conv_4d_double_3x3_1"
  type: "Convolution"
  bottom: "conv_4d_double_3x3_0"
  top: "conv_4d_double_3x3_1"
  convolution_param { 
     num_output: 96
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_4d_double_3x3_1"
  top: "conv_4d_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_double_3x3_1"
  bottom: "conv_4d_double_3x3_1"
  top: "conv_4d_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_double_3x3_1"
  type: "ReLU"
  bottom: "conv_4d_double_3x3_1"
  top: "conv_4d_double_3x3_1"
}

layer {
  name: "ave_pool_4d_pool"
  type: "Pooling"
  bottom: "ch_concat_4c_chconcat"
  top: "ave_pool_4d_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_4d_proj"
  type: "Convolution"
  bottom: "ave_pool_4d_pool"
  top: "conv_4d_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4d_proj"
  type: "BatchNorm"
  bottom: "conv_4d_proj"
  top: "conv_4d_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4d_proj"
  bottom: "conv_4d_proj"
  top: "conv_4d_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4d_proj"
  type: "ReLU"
  bottom: "conv_4d_proj"
  top: "conv_4d_proj"
}

layer {
  name: "ch_concat_4d_chconcat"
  type: "Concat"
  bottom: "conv_4d_1x1"
  bottom: "conv_4d_3x3"
  bottom: "conv_4d_double_3x3_1"
  bottom: "conv_4d_proj"
  top: "ch_concat_4d_chconcat"
}

layer {
  name: "conv_4e_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4d_chconcat"
  top: "conv_4e_3x3_reduce"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4e_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4e_3x3_reduce"
  top: "conv_4e_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4e_3x3_reduce"
  bottom: "conv_4e_3x3_reduce"
  top: "conv_4e_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4e_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4e_3x3_reduce"
  top: "conv_4e_3x3_reduce"
}

layer {
  name: "conv_4e_3x3"
  type: "Convolution"
  bottom: "conv_4e_3x3_reduce"
  top: "conv_4e_3x3"
  convolution_param { 
     num_output: 192
     kernel_size: 3
     stride: 2
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4e_3x3"
  type: "BatchNorm"
  bottom: "conv_4e_3x3"
  top: "conv_4e_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4e_3x3"
  bottom: "conv_4e_3x3"
  top: "conv_4e_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4e_3x3"
  type: "ReLU"
  bottom: "conv_4e_3x3"
  top: "conv_4e_3x3"
}

layer {
  name: "conv_4e_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4d_chconcat"
  top: "conv_4e_double_3x3_reduce"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4e_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_4e_double_3x3_reduce"
  top: "conv_4e_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4e_double_3x3_reduce"
  bottom: "conv_4e_double_3x3_reduce"
  top: "conv_4e_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4e_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_4e_double_3x3_reduce"
  top: "conv_4e_double_3x3_reduce"
}

layer {
  name: "conv_4e_double_3x3_0"
  type: "Convolution"
  bottom: "conv_4e_double_3x3_reduce"
  top: "conv_4e_double_3x3_0"
  convolution_param { 
     num_output: 256
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4e_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_4e_double_3x3_0"
  top: "conv_4e_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4e_double_3x3_0"
  bottom: "conv_4e_double_3x3_0"
  top: "conv_4e_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4e_double_3x3_0"
  type: "ReLU"
  bottom: "conv_4e_double_3x3_0"
  top: "conv_4e_double_3x3_0"
}

layer {
  name: "conv_4e_double_3x3_1"
  type: "Convolution"
  bottom: "conv_4e_double_3x3_0"
  top: "conv_4e_double_3x3_1"
  convolution_param { 
     num_output: 256
     kernel_size: 3
     stride: 2
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_4e_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_4e_double_3x3_1"
  top: "conv_4e_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_4e_double_3x3_1"
  bottom: "conv_4e_double_3x3_1"
  top: "conv_4e_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_4e_double_3x3_1"
  type: "ReLU"
  bottom: "conv_4e_double_3x3_1"
  top: "conv_4e_double_3x3_1"
}

layer {
  name: "max_pool_4e_pool"
  type: "Pooling"
  bottom: "ch_concat_4d_chconcat"
  top: "max_pool_4e_pool"
  pooling_param {
     pool: MAX
     kernel_size: 3
     stride: 2
     pad: 0
  }
}

layer {
  name: "ch_concat_4e_chconcat"
  type: "Concat"
  bottom: "conv_4e_3x3"
  bottom: "conv_4e_double_3x3_1"
  bottom: "max_pool_4e_pool"
  top: "ch_concat_4e_chconcat"
}

layer {
  name: "conv_5a_1x1"
  type: "Convolution"
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_1x1"
  convolution_param { 
     num_output: 352
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_1x1"
  type: "BatchNorm"
  bottom: "conv_5a_1x1"
  top: "conv_5a_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_1x1"
  bottom: "conv_5a_1x1"
  top: "conv_5a_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_1x1"
  type: "ReLU"
  bottom: "conv_5a_1x1"
  top: "conv_5a_1x1"
}

layer {
  name: "conv_5a_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_3x3_reduce"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_5a_3x3_reduce"
  top: "conv_5a_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_3x3_reduce"
  bottom: "conv_5a_3x3_reduce"
  top: "conv_5a_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_3x3_reduce"
  type: "ReLU"
  bottom: "conv_5a_3x3_reduce"
  top: "conv_5a_3x3_reduce"
}

layer {
  name: "conv_5a_3x3"
  type: "Convolution"
  bottom: "conv_5a_3x3_reduce"
  top: "conv_5a_3x3"
  convolution_param { 
     num_output: 320
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_3x3"
  type: "BatchNorm"
  bottom: "conv_5a_3x3"
  top: "conv_5a_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_3x3"
  bottom: "conv_5a_3x3"
  top: "conv_5a_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_3x3"
  type: "ReLU"
  bottom: "conv_5a_3x3"
  top: "conv_5a_3x3"
}

layer {
  name: "conv_5a_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_double_3x3_reduce"
  convolution_param { 
     num_output: 160
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_5a_double_3x3_reduce"
  top: "conv_5a_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_double_3x3_reduce"
  bottom: "conv_5a_double_3x3_reduce"
  top: "conv_5a_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_5a_double_3x3_reduce"
  top: "conv_5a_double_3x3_reduce"
}

layer {
  name: "conv_5a_double_3x3_0"
  type: "Convolution"
  bottom: "conv_5a_double_3x3_reduce"
  top: "conv_5a_double_3x3_0"
  convolution_param { 
     num_output: 224
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_5a_double_3x3_0"
  top: "conv_5a_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_double_3x3_0"
  bottom: "conv_5a_double_3x3_0"
  top: "conv_5a_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_double_3x3_0"
  type: "ReLU"
  bottom: "conv_5a_double_3x3_0"
  top: "conv_5a_double_3x3_0"
}

layer {
  name: "conv_5a_double_3x3_1"
  type: "Convolution"
  bottom: "conv_5a_double_3x3_0"
  top: "conv_5a_double_3x3_1"
  convolution_param { 
     num_output: 224
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_5a_double_3x3_1"
  top: "conv_5a_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_double_3x3_1"
  bottom: "conv_5a_double_3x3_1"
  top: "conv_5a_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_double_3x3_1"
  type: "ReLU"
  bottom: "conv_5a_double_3x3_1"
  top: "conv_5a_double_3x3_1"
}

layer {
  name: "ave_pool_5a_pool"
  type: "Pooling"
  bottom: "ch_concat_4e_chconcat"
  top: "ave_pool_5a_pool"
  pooling_param {
     pool: AVE
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_5a_proj"
  type: "Convolution"
  bottom: "ave_pool_5a_pool"
  top: "conv_5a_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5a_proj"
  type: "BatchNorm"
  bottom: "conv_5a_proj"
  top: "conv_5a_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5a_proj"
  bottom: "conv_5a_proj"
  top: "conv_5a_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5a_proj"
  type: "ReLU"
  bottom: "conv_5a_proj"
  top: "conv_5a_proj"
}

layer {
  name: "ch_concat_5a_chconcat"
  type: "Concat"
  bottom: "conv_5a_1x1"
  bottom: "conv_5a_3x3"
  bottom: "conv_5a_double_3x3_1"
  bottom: "conv_5a_proj"
  top: "ch_concat_5a_chconcat"
}

layer {
  name: "conv_5b_1x1"
  type: "Convolution"
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_1x1"
  convolution_param { 
     num_output: 352
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_1x1"
  type: "BatchNorm"
  bottom: "conv_5b_1x1"
  top: "conv_5b_1x1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_1x1"
  bottom: "conv_5b_1x1"
  top: "conv_5b_1x1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_1x1"
  type: "ReLU"
  bottom: "conv_5b_1x1"
  top: "conv_5b_1x1"
}

layer {
  name: "conv_5b_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_3x3_reduce"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_5b_3x3_reduce"
  top: "conv_5b_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_3x3_reduce"
  bottom: "conv_5b_3x3_reduce"
  top: "conv_5b_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_3x3_reduce"
  type: "ReLU"
  bottom: "conv_5b_3x3_reduce"
  top: "conv_5b_3x3_reduce"
}

layer {
  name: "conv_5b_3x3"
  type: "Convolution"
  bottom: "conv_5b_3x3_reduce"
  top: "conv_5b_3x3"
  convolution_param { 
     num_output: 320
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_3x3"
  type: "BatchNorm"
  bottom: "conv_5b_3x3"
  top: "conv_5b_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_3x3"
  bottom: "conv_5b_3x3"
  top: "conv_5b_3x3"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_3x3"
  type: "ReLU"
  bottom: "conv_5b_3x3"
  top: "conv_5b_3x3"
}

layer {
  name: "conv_5b_double_3x3_reduce"
  type: "Convolution"
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_double_3x3_reduce"
  convolution_param { 
     num_output: 192
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_double_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv_5b_double_3x3_reduce"
  top: "conv_5b_double_3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_double_3x3_reduce"
  bottom: "conv_5b_double_3x3_reduce"
  top: "conv_5b_double_3x3_reduce"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_double_3x3_reduce"
  type: "ReLU"
  bottom: "conv_5b_double_3x3_reduce"
  top: "conv_5b_double_3x3_reduce"
}

layer {
  name: "conv_5b_double_3x3_0"
  type: "Convolution"
  bottom: "conv_5b_double_3x3_reduce"
  top: "conv_5b_double_3x3_0"
  convolution_param { 
     num_output: 224
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_double_3x3_0"
  type: "BatchNorm"
  bottom: "conv_5b_double_3x3_0"
  top: "conv_5b_double_3x3_0"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_double_3x3_0"
  bottom: "conv_5b_double_3x3_0"
  top: "conv_5b_double_3x3_0"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_double_3x3_0"
  type: "ReLU"
  bottom: "conv_5b_double_3x3_0"
  top: "conv_5b_double_3x3_0"
}

layer {
  name: "conv_5b_double_3x3_1"
  type: "Convolution"
  bottom: "conv_5b_double_3x3_0"
  top: "conv_5b_double_3x3_1"
  convolution_param { 
     num_output: 224
     kernel_size: 3
     stride: 1
     pad: 1
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_double_3x3_1"
  type: "BatchNorm"
  bottom: "conv_5b_double_3x3_1"
  top: "conv_5b_double_3x3_1"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_double_3x3_1"
  bottom: "conv_5b_double_3x3_1"
  top: "conv_5b_double_3x3_1"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_double_3x3_1"
  type: "ReLU"
  bottom: "conv_5b_double_3x3_1"
  top: "conv_5b_double_3x3_1"
}

layer {
  name: "max_pool_5b_pool"
  type: "Pooling"
  bottom: "ch_concat_5a_chconcat"
  top: "max_pool_5b_pool"
  pooling_param {
     pool: MAX
     kernel_size: 3
     stride: 1
     pad: 1
  }
}

layer {
  name: "conv_5b_proj"
  type: "Convolution"
  bottom: "max_pool_5b_pool"
  top: "conv_5b_proj"
  convolution_param { 
     num_output: 128
     kernel_size: 1
     stride: 1
     pad: 0
     weight_filler { type: "xavier" }
     bias_filler { type: "constant" value: 0.2 }
  }
}

layer {
  name: "bn_5b_proj"
  type: "BatchNorm"
  bottom: "conv_5b_proj"
  top: "conv_5b_proj"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "scale_conv_5b_proj"
  bottom: "conv_5b_proj"
  top: "conv_5b_proj"
  type: "Scale"
  scale_param {
        bias_term: true
  }
}

layer {
  name: "relu_5b_proj"
  type: "ReLU"
  bottom: "conv_5b_proj"
  top: "conv_5b_proj"
}

layer {
  name: "ch_concat_5b_chconcat"
  type: "Concat"
  bottom: "conv_5b_1x1"
  bottom: "conv_5b_3x3"
  bottom: "conv_5b_double_3x3_1"
  bottom: "conv_5b_proj"
  top: "ch_concat_5b_chconcat"
}
#---------------------------------Inceptionv2 Body----------------------------#
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "ch_concat_5b_chconcat"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_1_relu"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_relu"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}
layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_1_relu"
  type: "ReLU"
  bottom: "conv7_1"
  top: "conv7_1"
}
layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "conv7_1"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_relu"
  type: "ReLU"
  bottom: "conv7_2"
  top: "conv7_2"
}
layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv7_2"
  top: "pool6"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm"
  type: "Normalize"
  bottom: "ch_concat_3b_chconcat"
  top: "ch_concat_3b_chconcat_norm"
  norm_param {
    across_spatial: false
    scale_filler {
      type: "constant"
      value: 20
    }
    channel_shared: false
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_loc"
  type: "Convolution"
  bottom: "ch_concat_3b_chconcat_norm"
  top: "ch_concat_3b_chconcat_norm_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_loc_perm"
  type: "Permute"
  bottom: "ch_concat_3b_chconcat_norm_mbox_loc"
  top: "ch_concat_3b_chconcat_norm_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_loc_flat"
  type: "Flatten"
  bottom: "ch_concat_3b_chconcat_norm_mbox_loc_perm"
  top: "ch_concat_3b_chconcat_norm_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_conf"
  type: "Convolution"
  bottom: "ch_concat_3b_chconcat_norm"
  top: "ch_concat_3b_chconcat_norm_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_conf_perm"
  type: "Permute"
  bottom: "ch_concat_3b_chconcat_norm_mbox_conf"
  top: "ch_concat_3b_chconcat_norm_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_conf_flat"
  type: "Flatten"
  bottom: "ch_concat_3b_chconcat_norm_mbox_conf_perm"
  top: "ch_concat_3b_chconcat_norm_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_3b_chconcat_norm_mbox_priorbox"
  type: "PriorBox"
  bottom: "ch_concat_3b_chconcat_norm"
  bottom: "data"
  top: "ch_concat_3b_chconcat_norm_mbox_priorbox"
  prior_box_param {
    min_size: 23.0
    aspect_ratio: 2
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_loc"
  type: "Convolution"
  bottom: "ch_concat_4d_chconcat"
  top: "ch_concat_4d_chconcat_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_loc_perm"
  type: "Permute"
  bottom: "ch_concat_4d_chconcat_mbox_loc"
  top: "ch_concat_4d_chconcat_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_loc_flat"
  type: "Flatten"
  bottom: "ch_concat_4d_chconcat_mbox_loc_perm"
  top: "ch_concat_4d_chconcat_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_conf"
  type: "Convolution"
  bottom: "ch_concat_4d_chconcat"
  top: "ch_concat_4d_chconcat_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_conf_perm"
  type: "Permute"
  bottom: "ch_concat_4d_chconcat_mbox_conf"
  top: "ch_concat_4d_chconcat_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_conf_flat"
  type: "Flatten"
  bottom: "ch_concat_4d_chconcat_mbox_conf_perm"
  top: "ch_concat_4d_chconcat_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_4d_chconcat_mbox_priorbox"
  type: "PriorBox"
  bottom: "ch_concat_4d_chconcat"
  bottom: "data"
  top: "ch_concat_4d_chconcat_mbox_priorbox"
  prior_box_param {
    min_size: 34.5
    max_size: 80.5
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_loc"
  type: "Convolution"
  bottom: "ch_concat_5b_chconcat"
  top: "ch_concat_5b_chconcat_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_loc_perm"
  type: "Permute"
  bottom: "ch_concat_5b_chconcat_mbox_loc"
  top: "ch_concat_5b_chconcat_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_loc_flat"
  type: "Flatten"
  bottom: "ch_concat_5b_chconcat_mbox_loc_perm"
  top: "ch_concat_5b_chconcat_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_conf"
  type: "Convolution"
  bottom: "ch_concat_5b_chconcat"
  top: "ch_concat_5b_chconcat_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_conf_perm"
  type: "Permute"
  bottom: "ch_concat_5b_chconcat_mbox_conf"
  top: "ch_concat_5b_chconcat_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_conf_flat"
  type: "Flatten"
  bottom: "ch_concat_5b_chconcat_mbox_conf_perm"
  top: "ch_concat_5b_chconcat_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "ch_concat_5b_chconcat_mbox_priorbox"
  type: "PriorBox"
  bottom: "ch_concat_5b_chconcat"
  bottom: "data"
  top: "ch_concat_5b_chconcat_mbox_priorbox"
  prior_box_param {
    min_size: 80.5
    max_size: 126.5
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "conv6_2_mbox_loc"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv6_2_mbox_loc"
  top: "conv6_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_loc_perm"
  top: "conv6_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_conf"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv6_2_mbox_conf"
  top: "conv6_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_conf_perm"
  top: "conv6_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv6_2"
  bottom: "data"
  top: "conv6_2_mbox_priorbox"
  prior_box_param {
    min_size: 126.5
    max_size: 172.5
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "conv7_2_mbox_loc"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv7_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv7_2_mbox_loc"
  top: "conv7_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_loc_perm"
  top: "conv7_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_conf"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv7_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv7_2_mbox_conf"
  top: "conv7_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_conf_perm"
  top: "conv7_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv7_2"
  bottom: "data"
  top: "conv7_2_mbox_priorbox"
  prior_box_param {
    min_size: 172.5
    max_size: 218.5
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "pool6_mbox_loc"
  type: "Convolution"
  bottom: "pool6"
  top: "pool6_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool6_mbox_loc_perm"
  type: "Permute"
  bottom: "pool6_mbox_loc"
  top: "pool6_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "pool6_mbox_loc_flat"
  type: "Flatten"
  bottom: "pool6_mbox_loc_perm"
  top: "pool6_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "pool6_mbox_conf"
  type: "Convolution"
  bottom: "pool6"
  top: "pool6_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool6_mbox_conf_perm"
  type: "Permute"
  bottom: "pool6_mbox_conf"
  top: "pool6_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "pool6_mbox_conf_flat"
  type: "Flatten"
  bottom: "pool6_mbox_conf_perm"
  top: "pool6_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "pool6_mbox_priorbox"
  type: "PriorBox"
  bottom: "pool6"
  bottom: "data"
  top: "pool6_mbox_priorbox"
  prior_box_param {
    min_size: 218.5
    max_size: 264.5
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
  }
}
layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "ch_concat_3b_chconcat_norm_mbox_loc_flat"
  bottom: "ch_concat_4d_chconcat_mbox_loc_flat"
  bottom: "ch_concat_5b_chconcat_mbox_loc_flat"
  bottom: "conv6_2_mbox_loc_flat"
  bottom: "conv7_2_mbox_loc_flat"
  bottom: "pool6_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "ch_concat_3b_chconcat_norm_mbox_conf_flat"
  bottom: "ch_concat_4d_chconcat_mbox_conf_flat"
  bottom: "ch_concat_5b_chconcat_mbox_conf_flat"
  bottom: "conv6_2_mbox_conf_flat"
  bottom: "conv7_2_mbox_conf_flat"
  bottom: "pool6_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "ch_concat_3b_chconcat_norm_mbox_priorbox"
  bottom: "ch_concat_4d_chconcat_mbox_priorbox"
  bottom: "ch_concat_5b_chconcat_mbox_priorbox"
  bottom: "conv6_2_mbox_priorbox"
  bottom: "conv7_2_mbox_priorbox"
  bottom: "pool6_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}

layer {
  name: "mbox_conf_reshape"
  type: "Reshape"
  bottom: "mbox_conf"
  top: "mbox_conf_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 2
    }
  }
}
layer {
  name: "mbox_conf_softmax"
  type: "Softmax"
  bottom: "mbox_conf_reshape"
  top: "mbox_conf_softmax"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_flatten"
  type: "Flatten"
  bottom: "mbox_conf_softmax"
  top: "mbox_conf_flatten"
  flatten_param {
    axis: 1
  }
}

layer {
  name: "detection_out"
  type: "DetectionOutput"
  bottom: "mbox_loc"
  bottom: "mbox_conf_flatten"
  bottom: "mbox_priorbox"
  bottom: "data"
  top: "detection_out"
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 104
    mean_value: 117
    mean_value: 123
    resize_param {
      prob: 1
      resize_mode: WARP
      height: 480
      width: 640
      interp_mode: LINEAR
    }
  }
  detection_output_param {
    num_classes: 2
    share_location: true
    background_label_id: 0
    nms_param {
      nms_threshold: 0.45
      top_k: 400
    }
    save_output_param {
      label_map_file: "data/data-PED/labelmap_caltech.prototxt"
    }
    code_type: CENTER_SIZE
    keep_top_k: 100
    confidence_threshold: 0.01
    visualize: true
    visualize_threshold: 0.5
  }
}
layer {
  name: "slience"
  type: "Silence"
  bottom: "detection_out"
  include {
    phase: TEST
  }
}

